function t(...t){!function(t){if(!Array.isArray(t)||0===t.length)throw new Error("At least one base class must be provided");t.forEach(((t,r)=>{if("function"!=typeof t||!t.prototype)throw new Error(`Invalid base class at index ${r}`)}))}(t);class r{constructor(...r){t.forEach((t=>{const o=new t(...r);Object.getOwnPropertyNames(o).forEach((t=>{"constructor"!==t&&(this[t]=o[t])}))}))}}return t.forEach((t=>{const o=t.prototype;Object.getOwnPropertyNames(o).forEach((t=>{"constructor"!==t&&(r.prototype[t]=o[t])})),Object.getOwnPropertyNames(t).forEach((o=>{"prototype"!==o&&"name"!==o&&"length"!==o&&(r[o]=t[o])}))})),r}export{t as Extender,t as default};
